'use strict';

const logger = require('ci-logger');
const reporter = require('./lib/reporter-html');
const validate = require('./lib/data-validators');

const generateHtmlReports = async(pa11yciResultsFileName, outputDir, options) => {
    try {
        validate.isString(pa11yciResultsFileName, 'Invalid source file name');
        validate.isString(outputDir, 'Invalid output directory path');

        reporter.ensureOutputDirectory(outputDir);
        const formattedResults = reporter.getReformattedPa11yCiResults(pa11yciResultsFileName);
        const pages = await reporter.generatePageHtmlReports(formattedResults.results, outputDir, options);
        reporter.generateSummaryHtmlReport({ date: new Date(), pages }, outputDir);
    }
    catch (err) {
        logger.log({ message: err.message, level: logger.levels.error, exitOnError: true, errorCode: 1 });
    }
};

module.exports = generateHtmlReports;
